// Code generated by goctl. DO NOT EDIT.
// Source: travel.proto

package travel

import (
	"context"

	"heart-trip/app/travel/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddCommentReq             = pb.AddCommentReq
	AddCommentResp            = pb.AddCommentResp
	AddGuessReq               = pb.AddGuessReq
	AddGuessResp              = pb.AddGuessResp
	AddHomestayReq            = pb.AddHomestayReq
	AddHomestayResp           = pb.AddHomestayResp
	AddWishListReq            = pb.AddWishListReq
	AddWishListResp           = pb.AddWishListResp
	AdminDeleteHomestayReq    = pb.AdminDeleteHomestayReq
	AdminDeleteHomestayResp   = pb.AdminDeleteHomestayResp
	Blog                      = pb.Blog
	ClearHistoryReq           = pb.ClearHistoryReq
	ClearHistoryResp          = pb.ClearHistoryResp
	DeleteHomestayReq         = pb.DeleteHomestayReq
	DeleteHomestayResp        = pb.DeleteHomestayResp
	History                   = pb.History
	HistoryListReq            = pb.HistoryListReq
	HistoryListResp           = pb.HistoryListResp
	Homestay                  = pb.Homestay
	HomestayComment           = pb.HomestayComment
	HomestayDetailReq         = pb.HomestayDetailReq
	HomestayDetailResp        = pb.HomestayDetailResp
	LikeBlogRequest           = pb.LikeBlogRequest
	LikeBlogResponse          = pb.LikeBlogResponse
	LikeCommentReq            = pb.LikeCommentReq
	LikeCommentResp           = pb.LikeCommentResp
	QueryBlogByIdRequest      = pb.QueryBlogByIdRequest
	QueryBlogByIdResponse     = pb.QueryBlogByIdResponse
	QueryBlogLikesRequest     = pb.QueryBlogLikesRequest
	QueryBlogLikesResponse    = pb.QueryBlogLikesResponse
	QueryBlogOfFollowRequest  = pb.QueryBlogOfFollowRequest
	QueryBlogOfFollowResponse = pb.QueryBlogOfFollowResponse
	QueryHotBlogRequest       = pb.QueryHotBlogRequest
	QueryHotBlogResponse      = pb.QueryHotBlogResponse
	QueryShopByTypeRequest    = pb.QueryShopByTypeRequest
	QueryShopByTypeResponse   = pb.QueryShopByTypeResponse
	RemoveHistoryReq          = pb.RemoveHistoryReq
	RemoveHistoryResp         = pb.RemoveHistoryResp
	RemoveWishListReq         = pb.RemoveWishListReq
	RemoveWishListResp        = pb.RemoveWishListResp
	SaveBlogRequest           = pb.SaveBlogRequest
	SaveBlogResponse          = pb.SaveBlogResponse
	ScrollResult              = pb.ScrollResult
	SearchByLocationReq       = pb.SearchByLocationReq
	SearchByLocationResp      = pb.SearchByLocationResp
	SearchHistoryReq          = pb.SearchHistoryReq
	SearchHistoryResp         = pb.SearchHistoryResp
	SeckillVoucher            = pb.SeckillVoucher
	SeckillVoucherRequest     = pb.SeckillVoucherRequest
	SeckillVoucherResponse    = pb.SeckillVoucherResponse
	UpdateHomestayReq         = pb.UpdateHomestayReq
	UpdateHomestayResp        = pb.UpdateHomestayResp
	UpdateShopRequest         = pb.UpdateShopRequest
	UpdateShopResponse        = pb.UpdateShopResponse
	UserDTO                   = pb.UserDTO
	VoucherOrder              = pb.VoucherOrder
	WishListReq               = pb.WishListReq
	WishListResp              = pb.WishListResp

	Travel interface {
		// homestayDetail
		HomestayDetail(ctx context.Context, in *HomestayDetailReq, opts ...grpc.CallOption) (*HomestayDetailResp, error)
		HomestayDetailWithoutLogin(ctx context.Context, in *HomestayDetailReq, opts ...grpc.CallOption) (*HomestayDetailResp, error)
		AddHomestay(ctx context.Context, in *AddHomestayReq, opts ...grpc.CallOption) (*AddHomestayResp, error)
		UpdateHomestay(ctx context.Context, in *UpdateHomestayReq, opts ...grpc.CallOption) (*UpdateHomestayResp, error)
		DeleteHomestay(ctx context.Context, in *DeleteHomestayReq, opts ...grpc.CallOption) (*DeleteHomestayResp, error)
		AdminDeleteHomestay(ctx context.Context, in *AdminDeleteHomestayReq, opts ...grpc.CallOption) (*AdminDeleteHomestayResp, error)
		AddComment(ctx context.Context, in *AddCommentReq, opts ...grpc.CallOption) (*AddCommentResp, error)
		LikeComment(ctx context.Context, in *LikeCommentReq, opts ...grpc.CallOption) (*LikeCommentResp, error)
		WishList(ctx context.Context, in *WishListReq, opts ...grpc.CallOption) (*WishListResp, error)
		AddWishList(ctx context.Context, in *AddWishListReq, opts ...grpc.CallOption) (*AddWishListResp, error)
		RemoveWishList(ctx context.Context, in *RemoveWishListReq, opts ...grpc.CallOption) (*RemoveWishListResp, error)
		AddGuess(ctx context.Context, in *AddGuessReq, opts ...grpc.CallOption) (*AddGuessResp, error)
		HistoryList(ctx context.Context, in *HistoryListReq, opts ...grpc.CallOption) (*HistoryListResp, error)
		RemoveHistory(ctx context.Context, in *RemoveHistoryReq, opts ...grpc.CallOption) (*RemoveHistoryResp, error)
		ClearHistory(ctx context.Context, in *ClearHistoryReq, opts ...grpc.CallOption) (*ClearHistoryResp, error)
		SearchHistory(ctx context.Context, in *SearchHistoryReq, opts ...grpc.CallOption) (*SearchHistoryResp, error)
		SearchByLocation(ctx context.Context, in *SearchByLocationReq, opts ...grpc.CallOption) (*SearchByLocationResp, error)
		QueryShopByType(ctx context.Context, in *QueryShopByTypeRequest, opts ...grpc.CallOption) (*QueryShopByTypeResponse, error)
		SeckillVoucher(ctx context.Context, in *SeckillVoucherRequest, opts ...grpc.CallOption) (*SeckillVoucherResponse, error)
		// 查询热门博客
		QueryHotBlog(ctx context.Context, in *QueryHotBlogRequest, opts ...grpc.CallOption) (*QueryHotBlogResponse, error)
		// 根据ID查询博客
		QueryBlogById(ctx context.Context, in *QueryBlogByIdRequest, opts ...grpc.CallOption) (*QueryBlogByIdResponse, error)
		// 点赞或取消点赞
		LikeBlog(ctx context.Context, in *LikeBlogRequest, opts ...grpc.CallOption) (*LikeBlogResponse, error)
		// 查询某篇博客的点赞用户
		QueryBlogLikes(ctx context.Context, in *QueryBlogLikesRequest, opts ...grpc.CallOption) (*QueryBlogLikesResponse, error)
		// 保存博客
		SaveBlog(ctx context.Context, in *SaveBlogRequest, opts ...grpc.CallOption) (*SaveBlogResponse, error)
		// 查询关注的博客
		QueryBlogOfFollow(ctx context.Context, in *QueryBlogOfFollowRequest, opts ...grpc.CallOption) (*QueryBlogOfFollowResponse, error)
		UpdateShop(ctx context.Context, in *UpdateShopRequest, opts ...grpc.CallOption) (*UpdateShopResponse, error)
	}

	defaultTravel struct {
		cli zrpc.Client
	}
)

func NewTravel(cli zrpc.Client) Travel {
	return &defaultTravel{
		cli: cli,
	}
}

// homestayDetail
func (m *defaultTravel) HomestayDetail(ctx context.Context, in *HomestayDetailReq, opts ...grpc.CallOption) (*HomestayDetailResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.HomestayDetail(ctx, in, opts...)
}

func (m *defaultTravel) HomestayDetailWithoutLogin(ctx context.Context, in *HomestayDetailReq, opts ...grpc.CallOption) (*HomestayDetailResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.HomestayDetailWithoutLogin(ctx, in, opts...)
}

func (m *defaultTravel) AddHomestay(ctx context.Context, in *AddHomestayReq, opts ...grpc.CallOption) (*AddHomestayResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.AddHomestay(ctx, in, opts...)
}

func (m *defaultTravel) UpdateHomestay(ctx context.Context, in *UpdateHomestayReq, opts ...grpc.CallOption) (*UpdateHomestayResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.UpdateHomestay(ctx, in, opts...)
}

func (m *defaultTravel) DeleteHomestay(ctx context.Context, in *DeleteHomestayReq, opts ...grpc.CallOption) (*DeleteHomestayResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.DeleteHomestay(ctx, in, opts...)
}

func (m *defaultTravel) AdminDeleteHomestay(ctx context.Context, in *AdminDeleteHomestayReq, opts ...grpc.CallOption) (*AdminDeleteHomestayResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.AdminDeleteHomestay(ctx, in, opts...)
}

func (m *defaultTravel) AddComment(ctx context.Context, in *AddCommentReq, opts ...grpc.CallOption) (*AddCommentResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.AddComment(ctx, in, opts...)
}

func (m *defaultTravel) LikeComment(ctx context.Context, in *LikeCommentReq, opts ...grpc.CallOption) (*LikeCommentResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.LikeComment(ctx, in, opts...)
}

func (m *defaultTravel) WishList(ctx context.Context, in *WishListReq, opts ...grpc.CallOption) (*WishListResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.WishList(ctx, in, opts...)
}

func (m *defaultTravel) AddWishList(ctx context.Context, in *AddWishListReq, opts ...grpc.CallOption) (*AddWishListResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.AddWishList(ctx, in, opts...)
}

func (m *defaultTravel) RemoveWishList(ctx context.Context, in *RemoveWishListReq, opts ...grpc.CallOption) (*RemoveWishListResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.RemoveWishList(ctx, in, opts...)
}

func (m *defaultTravel) AddGuess(ctx context.Context, in *AddGuessReq, opts ...grpc.CallOption) (*AddGuessResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.AddGuess(ctx, in, opts...)
}

func (m *defaultTravel) HistoryList(ctx context.Context, in *HistoryListReq, opts ...grpc.CallOption) (*HistoryListResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.HistoryList(ctx, in, opts...)
}

func (m *defaultTravel) RemoveHistory(ctx context.Context, in *RemoveHistoryReq, opts ...grpc.CallOption) (*RemoveHistoryResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.RemoveHistory(ctx, in, opts...)
}

func (m *defaultTravel) ClearHistory(ctx context.Context, in *ClearHistoryReq, opts ...grpc.CallOption) (*ClearHistoryResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.ClearHistory(ctx, in, opts...)
}

func (m *defaultTravel) SearchHistory(ctx context.Context, in *SearchHistoryReq, opts ...grpc.CallOption) (*SearchHistoryResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.SearchHistory(ctx, in, opts...)
}

func (m *defaultTravel) SearchByLocation(ctx context.Context, in *SearchByLocationReq, opts ...grpc.CallOption) (*SearchByLocationResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.SearchByLocation(ctx, in, opts...)
}

func (m *defaultTravel) QueryShopByType(ctx context.Context, in *QueryShopByTypeRequest, opts ...grpc.CallOption) (*QueryShopByTypeResponse, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.QueryShopByType(ctx, in, opts...)
}

func (m *defaultTravel) SeckillVoucher(ctx context.Context, in *SeckillVoucherRequest, opts ...grpc.CallOption) (*SeckillVoucherResponse, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.SeckillVoucher(ctx, in, opts...)
}

// 查询热门博客
func (m *defaultTravel) QueryHotBlog(ctx context.Context, in *QueryHotBlogRequest, opts ...grpc.CallOption) (*QueryHotBlogResponse, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.QueryHotBlog(ctx, in, opts...)
}

// 根据ID查询博客
func (m *defaultTravel) QueryBlogById(ctx context.Context, in *QueryBlogByIdRequest, opts ...grpc.CallOption) (*QueryBlogByIdResponse, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.QueryBlogById(ctx, in, opts...)
}

// 点赞或取消点赞
func (m *defaultTravel) LikeBlog(ctx context.Context, in *LikeBlogRequest, opts ...grpc.CallOption) (*LikeBlogResponse, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.LikeBlog(ctx, in, opts...)
}

// 查询某篇博客的点赞用户
func (m *defaultTravel) QueryBlogLikes(ctx context.Context, in *QueryBlogLikesRequest, opts ...grpc.CallOption) (*QueryBlogLikesResponse, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.QueryBlogLikes(ctx, in, opts...)
}

// 保存博客
func (m *defaultTravel) SaveBlog(ctx context.Context, in *SaveBlogRequest, opts ...grpc.CallOption) (*SaveBlogResponse, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.SaveBlog(ctx, in, opts...)
}

// 查询关注的博客
func (m *defaultTravel) QueryBlogOfFollow(ctx context.Context, in *QueryBlogOfFollowRequest, opts ...grpc.CallOption) (*QueryBlogOfFollowResponse, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.QueryBlogOfFollow(ctx, in, opts...)
}

func (m *defaultTravel) UpdateShop(ctx context.Context, in *UpdateShopRequest, opts ...grpc.CallOption) (*UpdateShopResponse, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.UpdateShop(ctx, in, opts...)
}
