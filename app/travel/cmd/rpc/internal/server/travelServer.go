// Code generated by goctl. DO NOT EDIT.
// Source: travel.proto

package server

import (
	"context"

	"heart-trip/app/travel/cmd/rpc/internal/logic"
	"heart-trip/app/travel/cmd/rpc/internal/svc"
	"heart-trip/app/travel/cmd/rpc/pb"
)

type TravelServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedTravelServer
}

func NewTravelServer(svcCtx *svc.ServiceContext) *TravelServer {
	return &TravelServer{
		svcCtx: svcCtx,
	}
}

// homestayDetail
func (s *TravelServer) HomestayDetail(ctx context.Context, in *pb.HomestayDetailReq) (*pb.HomestayDetailResp, error) {
	l := logic.NewHomestayDetailLogic(ctx, s.svcCtx)
	return l.HomestayDetail(in)
}

func (s *TravelServer) HomestayDetailWithoutLogin(ctx context.Context, in *pb.HomestayDetailReq) (*pb.HomestayDetailResp, error) {
	l := logic.NewHomestayDetailWithoutLoginLogic(ctx, s.svcCtx)
	return l.HomestayDetailWithoutLogin(in)
}

func (s *TravelServer) AddHomestay(ctx context.Context, in *pb.AddHomestayReq) (*pb.AddHomestayResp, error) {
	l := logic.NewAddHomestayLogic(ctx, s.svcCtx)
	return l.AddHomestay(in)
}

func (s *TravelServer) UpdateHomestay(ctx context.Context, in *pb.UpdateHomestayReq) (*pb.UpdateHomestayResp, error) {
	l := logic.NewUpdateHomestayLogic(ctx, s.svcCtx)
	return l.UpdateHomestay(in)
}

func (s *TravelServer) DeleteHomestay(ctx context.Context, in *pb.DeleteHomestayReq) (*pb.DeleteHomestayResp, error) {
	l := logic.NewDeleteHomestayLogic(ctx, s.svcCtx)
	return l.DeleteHomestay(in)
}

func (s *TravelServer) AdminDeleteHomestay(ctx context.Context, in *pb.AdminDeleteHomestayReq) (*pb.AdminDeleteHomestayResp, error) {
	l := logic.NewAdminDeleteHomestayLogic(ctx, s.svcCtx)
	return l.AdminDeleteHomestay(in)
}

func (s *TravelServer) AddComment(ctx context.Context, in *pb.AddCommentReq) (*pb.AddCommentResp, error) {
	l := logic.NewAddCommentLogic(ctx, s.svcCtx)
	return l.AddComment(in)
}

func (s *TravelServer) LikeComment(ctx context.Context, in *pb.LikeCommentReq) (*pb.LikeCommentResp, error) {
	l := logic.NewLikeCommentLogic(ctx, s.svcCtx)
	return l.LikeComment(in)
}

func (s *TravelServer) WishList(ctx context.Context, in *pb.WishListReq) (*pb.WishListResp, error) {
	l := logic.NewWishListLogic(ctx, s.svcCtx)
	return l.WishList(in)
}

func (s *TravelServer) AddWishList(ctx context.Context, in *pb.AddWishListReq) (*pb.AddWishListResp, error) {
	l := logic.NewAddWishListLogic(ctx, s.svcCtx)
	return l.AddWishList(in)
}

func (s *TravelServer) RemoveWishList(ctx context.Context, in *pb.RemoveWishListReq) (*pb.RemoveWishListResp, error) {
	l := logic.NewRemoveWishListLogic(ctx, s.svcCtx)
	return l.RemoveWishList(in)
}

func (s *TravelServer) AddGuess(ctx context.Context, in *pb.AddGuessReq) (*pb.AddGuessResp, error) {
	l := logic.NewAddGuessLogic(ctx, s.svcCtx)
	return l.AddGuess(in)
}

func (s *TravelServer) HistoryList(ctx context.Context, in *pb.HistoryListReq) (*pb.HistoryListResp, error) {
	l := logic.NewHistoryListLogic(ctx, s.svcCtx)
	return l.HistoryList(in)
}

func (s *TravelServer) RemoveHistory(ctx context.Context, in *pb.RemoveHistoryReq) (*pb.RemoveHistoryResp, error) {
	l := logic.NewRemoveHistoryLogic(ctx, s.svcCtx)
	return l.RemoveHistory(in)
}

func (s *TravelServer) ClearHistory(ctx context.Context, in *pb.ClearHistoryReq) (*pb.ClearHistoryResp, error) {
	l := logic.NewClearHistoryLogic(ctx, s.svcCtx)
	return l.ClearHistory(in)
}

func (s *TravelServer) SearchHistory(ctx context.Context, in *pb.SearchHistoryReq) (*pb.SearchHistoryResp, error) {
	l := logic.NewSearchHistoryLogic(ctx, s.svcCtx)
	return l.SearchHistory(in)
}

func (s *TravelServer) SearchByLocation(ctx context.Context, in *pb.SearchByLocationReq) (*pb.SearchByLocationResp, error) {
	l := logic.NewSearchByLocationLogic(ctx, s.svcCtx)
	return l.SearchByLocation(in)
}

func (s *TravelServer) QueryShopByType(ctx context.Context, in *pb.QueryShopByTypeRequest) (*pb.QueryShopByTypeResponse, error) {
	l := logic.NewQueryShopByTypeLogic(ctx, s.svcCtx)
	return l.QueryShopByType(in)
}

func (s *TravelServer) SeckillVoucher(ctx context.Context, in *pb.SeckillVoucherRequest) (*pb.SeckillVoucherResponse, error) {
	l := logic.NewSeckillVoucherLogic(ctx, s.svcCtx)
	return l.SeckillVoucher(in)
}

// 查询热门博客
func (s *TravelServer) QueryHotBlog(ctx context.Context, in *pb.QueryHotBlogRequest) (*pb.QueryHotBlogResponse, error) {
	l := logic.NewQueryHotBlogLogic(ctx, s.svcCtx)
	return l.QueryHotBlog(in)
}

// 根据ID查询博客
func (s *TravelServer) QueryBlogById(ctx context.Context, in *pb.QueryBlogByIdRequest) (*pb.QueryBlogByIdResponse, error) {
	l := logic.NewQueryBlogByIdLogic(ctx, s.svcCtx)
	return l.QueryBlogById(in)
}

// 点赞或取消点赞
func (s *TravelServer) LikeBlog(ctx context.Context, in *pb.LikeBlogRequest) (*pb.LikeBlogResponse, error) {
	l := logic.NewLikeBlogLogic(ctx, s.svcCtx)
	return l.LikeBlog(in)
}

// 查询某篇博客的点赞用户
func (s *TravelServer) QueryBlogLikes(ctx context.Context, in *pb.QueryBlogLikesRequest) (*pb.QueryBlogLikesResponse, error) {
	l := logic.NewQueryBlogLikesLogic(ctx, s.svcCtx)
	return l.QueryBlogLikes(in)
}

// 保存博客
func (s *TravelServer) SaveBlog(ctx context.Context, in *pb.SaveBlogRequest) (*pb.SaveBlogResponse, error) {
	l := logic.NewSaveBlogLogic(ctx, s.svcCtx)
	return l.SaveBlog(in)
}

// 查询关注的博客
func (s *TravelServer) QueryBlogOfFollow(ctx context.Context, in *pb.QueryBlogOfFollowRequest) (*pb.QueryBlogOfFollowResponse, error) {
	l := logic.NewQueryBlogOfFollowLogic(ctx, s.svcCtx)
	return l.QueryBlogOfFollow(in)
}

func (s *TravelServer) UpdateShop(ctx context.Context, in *pb.UpdateShopRequest) (*pb.UpdateShopResponse, error) {
	l := logic.NewUpdateShopLogic(ctx, s.svcCtx)
	return l.UpdateShop(in)
}
