// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	homestay "heart-trip/app/travel/cmd/api/internal/handler/homestay"
	homestayBussiness "heart-trip/app/travel/cmd/api/internal/handler/homestayBussiness"
	homestayComment "heart-trip/app/travel/cmd/api/internal/handler/homestayComment"
	"heart-trip/app/travel/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// boss all homestay room
				Method:  http.MethodPost,
				Path:    "/homestay/businessList",
				Handler: homestay.BusinessListHandler(serverCtx),
			},
			{
				// guess homestay room
				Method:  http.MethodGet,
				Path:    "/homestay/guessList",
				Handler: homestay.GuessListHandler(serverCtx),
			},
			{
				// homestay room detail
				Method:  http.MethodGet,
				Path:    "/homestay/homestayDetailWithoutLogin",
				Handler: homestay.HomestayDetailWithoutLoginHandler(serverCtx),
			},
			{
				// homestay room list
				Method:  http.MethodGet,
				Path:    "/homestay/homestayList",
				Handler: homestay.HomestayListHandler(serverCtx),
			},
			{
				// query shop by type
				Method:  http.MethodPost,
				Path:    "/homestay/queryShopByType",
				Handler: homestay.QueryShopByTypeHandler(serverCtx),
			},
			{
				// search by location
				Method:  http.MethodGet,
				Path:    "/homestay/searchByLocation",
				Handler: homestay.SearchByLocationHandler(serverCtx),
			},
		},
		rest.WithPrefix("/travel/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// add guess
				Method:  http.MethodPost,
				Path:    "/homestay/addGuess",
				Handler: homestay.AddGuessHandler(serverCtx),
			},
			{
				// add homestay
				Method:  http.MethodPost,
				Path:    "/homestay/addHomestay",
				Handler: homestay.AddHomestayHandler(serverCtx),
			},
			{
				// admin delete homestay
				Method:  http.MethodDelete,
				Path:    "/homestay/adminDeleteHomestay",
				Handler: homestay.AdminDeleteHomestayHandler(serverCtx),
			},
			{
				// delete homestay
				Method:  http.MethodDelete,
				Path:    "/homestay/deleteHomestay",
				Handler: homestay.DeleteHomestayHandler(serverCtx),
			},
			{
				// homestay room detail
				Method:  http.MethodGet,
				Path:    "/homestay/homestayDetail",
				Handler: homestay.HomestayDetailHandler(serverCtx),
			},
			{
				// my homestay room list
				Method:  http.MethodGet,
				Path:    "/homestay/myHomestayList",
				Handler: homestay.MyHomestayListHandler(serverCtx),
			},
			{
				// seckill voucher order
				Method:  http.MethodPost,
				Path:    "/homestay/seckillVoucher",
				Handler: homestay.SeckillVoucherHandler(serverCtx),
			},
			{
				// update homestay
				Method:  http.MethodPut,
				Path:    "/homestay/updateHomestay",
				Handler: homestay.UpdateHomestayHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/travel/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// good boss
				Method:  http.MethodPost,
				Path:    "/homestayBussiness/goodBoss",
				Handler: homestayBussiness.GoodBossHandler(serverCtx),
			},
			{
				// boss detail
				Method:  http.MethodPost,
				Path:    "/homestayBussiness/homestayBussinessDetail",
				Handler: homestayBussiness.HomestayBussinessDetailHandler(serverCtx),
			},
			{
				// business list
				Method:  http.MethodPost,
				Path:    "/homestayBussiness/homestayBussinessList",
				Handler: homestayBussiness.HomestayBussinessListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/travel/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// homestay comment list
				Method:  http.MethodGet,
				Path:    "/homestayComment/commentList",
				Handler: homestayComment.CommentListHandler(serverCtx),
			},
			{
				// like comment
				Method:  http.MethodPost,
				Path:    "/homestayComment/likeComment",
				Handler: homestayComment.LikeCommentHandler(serverCtx),
			},
		},
		rest.WithPrefix("/travel/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// add comment
				Method:  http.MethodPost,
				Path:    "/homestayComment/addComment",
				Handler: homestayComment.AddCommentHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/travel/v1"),
	)
}
